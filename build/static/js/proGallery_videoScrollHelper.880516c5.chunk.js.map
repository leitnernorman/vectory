{"version":3,"sources":["../../../src/components/helpers/videoScrollHelper.js"],"names":["this","bind","VideoScrollHelper","prototype","videoItems","padding"],"mappings":"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","file":"static/js/proGallery_videoScrollHelper.880516c5.chunk.js","sourcesContent":["import { __spreadArrays } from \"tslib\";\nimport { GALLERY_CONSTS, dimensionsHelper, window } from 'pro-gallery-lib';\nimport { isWithinPaddingVertically, isWithinPaddingHorizontally, } from './scrollHelper';\nvar VIDEO_EVENTS = {\n    SCROLL: 'SCROLL',\n    CLICKED: 'CLICKED',\n    HOVERED: 'HOVERED',\n    ENDED: 'ENDED',\n    INIT_SCROLL: 'INIT_SCROLL',\n};\nvar VideoScrollHelper = /** @class */ (function () {\n    function VideoScrollHelper(config) {\n        var _this = this;\n        this.scrollBase = 0;\n        this.videoItems = [];\n        this.currentPlayingIdx = -1;\n        this.currentItemCount = 0;\n        this.playing = false;\n        this.updateGalleryStructure = this.updateGalleryStructure.bind(this);\n        this.initializePlayState = this.initializePlayState.bind(this);\n        this.onScroll = this.onScroll.bind(this);\n        this.handleEvent = this.handleEvent.bind(this);\n        this.play = this.play.bind(this);\n        this.stop = this.stop.bind(this);\n        this.isVisible = this.isVisible.bind(this);\n        this.videoPlay = undefined;\n        this.itemClick = undefined;\n        this.setPlayingVideos = config.setPlayingVideos;\n        this.lastVideoPlayed = -1;\n        this.videoRatingMap = new Map();\n        this.trigger = Object.assign.apply(Object, __spreadArrays([{}], Object.keys(VIDEO_EVENTS).map(function (key) {\n            var _a;\n            return (_a = {},\n                _a[key] = function (args) { return _this.handleEvent({ eventName: key, eventData: args }); },\n                _a);\n        })));\n    }\n    //--------------------------updates----------------------------------//\n    VideoScrollHelper.prototype.updateGalleryStructure = function (_a) {\n        var _this = this;\n        var galleryStructure = _a.galleryStructure, scrollBase = _a.scrollBase, videoPlay = _a.videoPlay, videoLoop = _a.videoLoop, itemClick = _a.itemClick, oneRow = _a.oneRow;\n        this.galleryWidth = dimensionsHelper.getGalleryDimensions().galleryWidth;\n        this.scrollBase = scrollBase;\n        this.videoPlay = videoPlay;\n        this.videoLoop = videoLoop;\n        this.itemClick = itemClick;\n        this.oneRow = oneRow;\n        this.currentItemCount = galleryStructure.galleryItems.length;\n        this.videoItems = [];\n        galleryStructure.galleryItems.forEach(function (item) {\n            if (item.type === 'video' ||\n                (item.type === 'image' &&\n                    (item.id.includes('_placeholder') || item.isVideoPlaceholder))) {\n                // either video or a placeholder for video files (both need to be included in the list)\n                if (!_this.videoRatingMap.has(item.id)) {\n                    _this.videoRatingMap.set(item.id, item.idx);\n                }\n                _this.videoItems.push(item);\n            }\n        });\n    };\n    //--------------------------triggers--------------------------------//\n    VideoScrollHelper.prototype.handleEvent = function (_a) {\n        var eventName = _a.eventName, eventData = _a.eventData;\n        switch (eventName) {\n            case VIDEO_EVENTS.SCROLL:\n                this.onScroll(eventData);\n                break;\n            case GALLERY_CONSTS.events.ITEM_ACTION_TRIGGERED:\n                //case VIDEO_EVENTS.clicked:\n                this.itemClicked(eventData.idx);\n                break;\n            case GALLERY_CONSTS.events.HOVER_SET:\n                //case VIDEO_EVENTS.hovered:\n                this.itemHovered(eventData);\n                break;\n            case GALLERY_CONSTS.events.VIDEO_ENDED:\n                //case VIDEO_EVENTS.ended:\n                this.videoEnded(eventData.idx);\n                break;\n            case GALLERY_CONSTS.events.VIDEO_PLAYED:\n                //case VIDEO_EVENTS.ended:\n                this.videoPlayed(eventData.idx);\n                break;\n            case GALLERY_CONSTS.events.VIDEO_ERROR:\n                //case VIDEO_EVENTS.ended:\n                this.videoErrorReported();\n                break;\n            case VIDEO_EVENTS.INIT_SCROLL:\n                break;\n            default:\n        }\n    };\n    VideoScrollHelper.prototype.itemHovered = function (idx) {\n        if (this.videoPlay !== 'hover')\n            return;\n        if (this.IdxExistsInVideoItems(idx)) {\n            this.play(idx);\n        }\n        else {\n            //do nothing\n        }\n    };\n    VideoScrollHelper.prototype.itemClicked = function (idx) {\n        if (this.videoPlay !== 'onClick')\n            return;\n        // if (this.itemClick !== 'nothing') return;\n        if (this.IdxExistsInVideoItems(idx)) {\n            if (this.currentPlayingIdx === idx) {\n                this.stop();\n            }\n            else {\n                this.play(idx);\n            }\n        }\n        else {\n            //do nothing\n        }\n    };\n    VideoScrollHelper.prototype.onScroll = function (_a) {\n        var _this = this;\n        var top = _a.top, left = _a.left;\n        this.top = top >= 0 ? top : this.top;\n        this.left = left >= 0 ? left : this.left;\n        if (this.currentPlayingIdx === -1) {\n            this.autoPlayNextVideoByRating({ top: this.top, left: this.left });\n        }\n        else {\n            if (!this.isCurrentVideoStillVisible({ top: this.top, left: this.left })) {\n                this.stop(this.videoItems.findIndex(function (item) { return item.idx === _this.currentPlayingIdx; }));\n            }\n            this.autoPlayNextVideoByRating({ top: this.top, left: this.left });\n        }\n    };\n    VideoScrollHelper.prototype.videoEnded = function (idx) {\n        var indexInVideoItems = this.videoItems.findIndex(function (item) { return item.idx === idx; });\n        this.stop(indexInVideoItems);\n        var scroll = { top: this.top, left: this.left };\n        this.autoPlayNextVideoByRating(scroll);\n    };\n    VideoScrollHelper.prototype.videoPlayed = function (idx) {\n        this.lastVideoPlayed = idx;\n    };\n    VideoScrollHelper.prototype.videoErrorReported = function () {\n        this.stop();\n    };\n    VideoScrollHelper.prototype.initializePlayState = function () {\n        this.autoPlayNextVideoByRating({ top: this.top, left: this.left });\n    };\n    //-------------------------------controls------------------------------------//\n    VideoScrollHelper.prototype.autoPlayNextVideoByRating = function (_a) {\n        var _this = this;\n        var top = _a.top, left = _a.left;\n        if (!this.shouldAutoPlay()) {\n            return;\n        }\n        var secondBestRating = {\n            idx: -1,\n            rating: Infinity,\n        };\n        var bestRating = {\n            idx: -1,\n            rating: Infinity,\n        };\n        this.videoItems.some(function (item) {\n            if (_this.isVisible(item, { top: top, left: left })) {\n                var itemRating = _this.videoRatingMap.get(item.id);\n                if (itemRating <= bestRating.rating) {\n                    secondBestRating.idx = bestRating.idx;\n                    secondBestRating.rating = bestRating.rating;\n                    bestRating.idx = item.idx;\n                    bestRating.rating = itemRating;\n                }\n                else if (itemRating <= secondBestRating.rating) {\n                    secondBestRating.idx = item.idx;\n                    secondBestRating.rating = itemRating;\n                }\n                return false;\n            }\n            else {\n                if (bestRating.idx >= 0) {\n                    return true;\n                }\n                return false;\n            }\n        });\n        if (bestRating.idx >= 0) {\n            if (!this.allowedLoop() && bestRating.idx === this.lastVideoPlayed) {\n                if (secondBestRating.idx >= 0) {\n                    this.play(secondBestRating.idx); //play 2nd in line instead. keep best rating for next by the score he got...\n                }\n                else {\n                    return; //cant play same video twice.\n                }\n            }\n            else {\n                this.play(bestRating.idx);\n            }\n        }\n        else {\n            this.lastVideoPlayed = -2; //if there are no videos to play. we can reset this mechanism so that one-video galleries can keep playing the same video\n        }\n    };\n    VideoScrollHelper.prototype.calculateCurrentItemPlacement = function () {\n        var _this = this;\n        return this.videoItems.findIndex(function (item) { return item.idx === _this.currentPlayingIdx; });\n    };\n    VideoScrollHelper.prototype.play = function (idx) {\n        this.setPlayingIdx(idx);\n        this.playing = true;\n    };\n    VideoScrollHelper.prototype.stop = function (indexInVideoItems) {\n        if (indexInVideoItems >= 0) {\n            var newRating = this.videoRatingMap.get(this.videoItems[indexInVideoItems].id) +\n                this.currentItemCount;\n            this.videoRatingMap.set(this.videoItems[indexInVideoItems].id, newRating);\n        }\n        this.setPlayingIdx(-1);\n        this.playing = false;\n    };\n    VideoScrollHelper.prototype.onPlayingIdxChange = function () {\n        this.setPlayingVideos(this.currentPlayingIdx);\n    };\n    //-------------------------------get/set----------------------------------------//\n    VideoScrollHelper.prototype.setPlayingIdx = function (idx) {\n        if (this.currentPlayingIdx !== idx) {\n            this.currentPlayingIdx = idx;\n            this.onPlayingIdxChange();\n        }\n    };\n    //-----------------------------Utils--------------------------------------------//\n    VideoScrollHelper.prototype.isCurrentVideoStillVisible = function (_a) {\n        var top = _a.top, left = _a.left;\n        var currentItemPlacement = this.calculateCurrentItemPlacement();\n        return this.isVisible(this.videoItems[currentItemPlacement], { top: top, left: left });\n    };\n    VideoScrollHelper.prototype.isVisible = function (item, _a) {\n        var top = _a.top, left = _a.left;\n        var target = {\n            offsetTop: this.scrollBase || 0,\n            scrollY: top,\n            scrollLeft: left,\n        };\n        var videoPlayVerticalTolerance = (item.offset.top - item.offset.bottom) / 2;\n        var videoPlayHorizontalTolerance = (item.offset.left - item.offset.right) / 2;\n        var visibleVertically = isWithinPaddingVertically({\n            target: target,\n            scrollBase: this.scrollBase,\n            top: item.offset.top,\n            bottom: item.offset.top + item.style.height,\n            screenHeight: window && window.innerHeight,\n            padding: videoPlayVerticalTolerance,\n        });\n        var visibleHorizontally;\n        if (!this.oneRow) {\n            visibleHorizontally = true;\n        }\n        else {\n            visibleHorizontally = isWithinPaddingHorizontally({\n                target: target,\n                left: item.offset.left,\n                right: item.offset.left + item.style.width,\n                screenWidth: this.galleryWidth || (window && window.innerWidth),\n                padding: videoPlayHorizontalTolerance,\n            });\n        }\n        return visibleVertically && visibleHorizontally;\n    };\n    VideoScrollHelper.prototype.shouldAutoPlay = function () {\n        return this.videoPlay === 'auto';\n    };\n    VideoScrollHelper.prototype.allowedLoop = function () {\n        return this.videoLoop === true;\n    };\n    VideoScrollHelper.prototype.IdxExistsInVideoItems = function (idx) {\n        return this.videoItems.some(function (item) { return item.idx === idx; });\n    };\n    return VideoScrollHelper;\n}());\nexport default VideoScrollHelper;\n// this.renderedPaddingMultiply = 2;\n// this.visiblePaddingMultiply = 0;\n// this.videoPlayVerticalTolerance =\n//   (this.props.offset.bottom - this.props.offset.top) / 2;\n// this.videoPlayHorizontalTolerance =\n//   (this.props.offset.right - this.props.offset.left) / 2;\n// this.padding = {\n//   renderedVertical:\n//     utils.parseGetParam('renderedPadding') ||\n//     this.screenSize.height * this.renderedPaddingMultiply,\n//   visibleVertical:\n//     utils.parseGetParam('displayPadding') ||\n//     this.screenSize.height * this.visiblePaddingMultiply,\n//   playVertical:\n//     utils.parseGetParam('playPadding') ||\n//     this.screenSize.height * this.visiblePaddingMultiply -\n//       this.videoPlayVerticalTolerance,\n//   renderedHorizontal:\n//     utils.parseGetParam('renderedPadding') ||\n//     this.screenSize.width * this.renderedPaddingMultiply,\n//   visibleHorizontal:\n//     utils.parseGetParam('displayPadding') ||\n//     this.screenSize.width * this.visiblePaddingMultiply,\n//   playHorizontal:\n//     utils.parseGetParam('playPadding') ||\n//     this.screenSize.width * this.visiblePaddingMultiply -\n//       this.videoPlayHorizontalTolerance,\n// };\n//# sourceMappingURL=videoScrollHelper.js.map"],"sourceRoot":""}